1051. 复数乘法 (15)

时间限制
400 ms
内存限制
65536 kB
代码长度限制
8000 B
判题程序
Standard
作者
CHEN, Yue
复数可以写成(A + Bi)的常规形式，其中A是实部，B是虚部，i是虚数单位，满足i2 = -1；也可以写成极坐标下的指数形式(R*e(Pi))，其中R是复数模，P是辐角，i是虚数单位，其等价于三角形式 R(cos(P) + isin(P))。

现给定两个复数的R和P，要求输出两数乘积的常规形式。

输入格式：

输入在一行中依次给出两个复数的R1, P1, R2, P2，数字间以空格分隔。

输出格式：

在一行中按照“A+Bi”的格式输出两数乘积的常规形式，实部和虚部均保留2位小数。注意：如果B是负数，则应该写成“A-|B|i”的形式。

输入样例：
2.3 3.5 5.2 0.4
输出样例：
-8.68-8.23i

//Create by Caijie.Senior student of BJTU
import java.lang.*;
import java.io.*;

public class Main {
    public static double act(double num1, double num2) {
        return num1 * Math.cos(num2);
    }

    public static double vis(double num1, double num2) {
        return num1 * Math.sin(num2);
    }

    public static void main(String[] args) throws IOException {
        BufferedReader buff = new BufferedReader(new InputStreamReader(System.in));
        String line = buff.readLine();
        String[] nums = line.split(" ");
        double[] num = new double[4];
        num[0] = act(Double.parseDouble(nums[0]), Double.parseDouble(nums[1]));
        num[1] = vis(Double.parseDouble(nums[0]), Double.parseDouble(nums[1]));
        num[2] = act(Double.parseDouble(nums[2]), Double.parseDouble(nums[3]));
        num[3] = vis(Double.parseDouble(nums[2]), Double.parseDouble(nums[3]));
        double a = num[0] * num[2] - num[1] * num[3];
        double b = num[0] * num[3] + num[1] * num[2];
        if (a < 0 && a > -0.005)
            System.out.print("0.00");
        else
            System.out.print(String.format("%.2f",a));
        if (b < 0 && b > -0.005)
            System.out.print("+0.00i");
        else if (b >= 0)
            System.out.print("+" + String.format("%.2f", b) + "i");
        else
            System.out.print(String.format("%.2f", b) + "i");
    }
}
