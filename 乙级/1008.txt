//Create by Caijie.Senior student of BJTU
1008. 数组元素循环右移问题 (20)

时间限制
400 ms
内存限制
65536 kB
代码长度限制
8000 B
判题程序
Standard
一个数组A中存有N（N>0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（M>=0）个位置，即将A中的数据由（A0 A1……AN-1）变换为（AN-M …… AN-1 A0 A1……AN-M-1）（最后M个数循环移至最前面的M个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？

输入格式：每个输入包含一个测试用例，第1行输入N ( 1<=N<=100)、M（M>=0）；第2行输入N个整数，之间用空格分隔。

输出格式：在一行中输出循环右移M位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。

输入样例：
6 2
1 2 3 4 5 6
输出样例：
5 6 1 2 3 4

import java.util.*;
import java.lang.*;

public class Main {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int sum = s.nextInt();
        int move = s.nextInt();
        int[] array = new int[sum];
        for (int i = 0; i < sum; i++) {
            array[i] = s.nextInt();
        }
        int i, j;
        if(sum == 1)
            System.out.print(array[0]);
        else if (move == 0 || move == 6) {
            for (i = 0; i < array.length - 1; i++)
                System.out.print(array[i] + " ");
            System.out.print(array[array.length-1]);
        }
        else {
            if(move>sum)
                move = move % sum;
            for (j = array.length - move; j < array.length; j++)
                System.out.print(array[j] + " ");
            for (i = 0; i < array.length - move - 1; i++)
                System.out.print(array[i] + " ");
            System.out.print(array[array.length - move - 1]);
        }
    }
}
