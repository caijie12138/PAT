1048. 数字加密(20)

时间限制
400 ms
内存限制
65536 kB
代码长度限制
8000 B
判题程序
Standard
作者
CHEN, Yue
本题要求实现一种数字加密方法。首先固定一个加密用正整数A，对任一正整数B，将其每1位数字与A的对应位置上的数字进行以下运算：对奇数位，对应位的数字相加后对13取余——这里用J代表10、Q代表11、K代表12；对偶数位，用B的数字减去A的数字，若结果为负数，则再加10。这里令个位为第1位。

输入格式：

输入在一行中依次给出A和B，均为不超过100位的正整数，其间以空格分隔。

输出格式：

在一行中输出加密后的结果。

输入样例：
1234567 368782971
输出样例：
3695Q8118

大坑题 记住如果A的长度大于B的长度 需要在B的前面补0 达到和A一样的长度
//Create by Caijie.Senior student of BJTU
import java.lang.*;
import java.io.*;

public class Main {
    public static void output(String[] arr, boolean flag, int mode) {
        int result;
        int i, j;
        if (mode == 1) {
            i = arr[1].length() - arr[0].length();
            j = 0;
        } else {
            i = 0;
            j = arr[0].length() - arr[1].length();
            for (int k = 0; k < j; k++) {
                if (flag) {
                    flag = false;
                    result = (arr[0].charAt(k) - 48) % 13;
                    System.out.print(result);
                }else {
                    flag = true;
                    result = -(arr[0].charAt(k) - 48);
                    if (result < 0)
                        System.out.print(result + 10);
                    else
                        System.out.print(result);
                }
            }
        }
        for (; i < arr[1].length() && j < arr[0].length(); i++, j++) {
            if (flag) {
                flag = false;
                result = ((arr[0].charAt(j) - 48) + (arr[1].charAt(i) - 48)) % 13;
                if (result == 10)
                    System.out.print("J");
                else if (result == 11)
                    System.out.print("Q");
                else if (result == 12)
                    System.out.print("K");
                else
                    System.out.print(result);
            } else {
                flag = true;
                result = (arr[1].charAt(i) - 48) - (arr[0].charAt(j) - 48);
                if (result < 0)
                    System.out.print(result + 10);
                else
                    System.out.print(result);
            }

        }
    }

    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        String line = bufferedReader.readLine();
        String arr[] = line.split(" ");
        boolean flag = true;
        if (arr[1].length() > arr[0].length())
            for (int i = 0; i < arr[1].length() - arr[0].length(); i++)
                System.out.print(arr[1].charAt(i));
        if (arr[1].length() > arr[0].length()) {
            if (arr[0].length() % 2 == 0)
                flag = false;
            output(arr, flag, 1);
        } else {
            if (arr[0].length() % 2 == 0)
                flag = false;
            output(arr, flag, 0);
        }
    }
}

