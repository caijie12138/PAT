1079 延迟的回文数 (20)（20 分）
给定一个 k+1 位的正整数 N，写成 a~k~...a~1~a~0~ 的形式，其中对所有 i 有 0 <= a~i~ < 10 且 a~k~ > 0。N 被称为一个回文数，当且仅当对所有 i 有 a~i~ = a~k-i~。零也被定义为一个回文数。

非回文数也可以通过一系列操作变出回文数。首先将该数字逆转，再将逆转数与该数相加，如果和还不是一个回文数，就重复这个逆转再相加的操作，直到一个回文数出现。如果一个非回文数可以变出回文数，就称这个数为延迟的回文数。（定义翻译自 https://en.wikipedia.org/wiki/Palindromic\_number）

给定任意一个正整数，本题要求你找到其变出的那个回文数。

输入格式：

输入在一行中给出一个不超过1000位的正整数。

输出格式：

对给定的整数，一行一行输出其变出回文数的过程。每行格式如下

A + B = C
其中A是原始的数字，B是A的逆转数，C是它们的和。A从输入的整数开始。重复操作直到C在10步以内变成回文数，这时在一行中输出“C is a palindromic number.”；或者如果10步都没能得到回文数，最后就在一行中输出“Not found in 10 iterations.”。

输入样例 1：

97152
输出样例 1：

97152 + 25179 = 122331
122331 + 133221 = 255552
255552 is a palindromic number.
输入样例 2：

196
输出样例 2：

196 + 691 = 887
887 + 788 = 1675
1675 + 5761 = 7436
7436 + 6347 = 13783
13783 + 38731 = 52514
52514 + 41525 = 94039
94039 + 93049 = 187088
187088 + 880781 = 1067869
1067869 + 9687601 = 10755470
10755470 + 07455701 = 18211171
Not found in 10 iterations.

//Create by Caijie.Senior student of BJTU
import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
    static StringBuffer result;
    public static boolean judge2(String resu) {
        for (int i = 0; i < resu.length() / 2; i++) {
            if (resu.charAt(i) != resu.charAt(resu.length() - 1 - i))
                return false;
        }
        return true;
    }

    public static String add(String a1, String a2) {
        String result = "";
        int add_ = 0;
        for (int i = a1.length() - 1; i >= 0; i--) {
            int he = a1.charAt(i) - '0' + a2.charAt(i) - '0' + add_;
            add_ = 0;
            if (he >= 10) {
                he = he % 10;
                add_++;
            }
            result += he + "";
        }
        if(add_!=0)
            result += add_+"";
        return new StringBuffer(result).reverse().toString();
    }

    public static boolean judge(StringBuffer num) {
        String num1 = num.toString();
        if (judge2(num1))
            return true;
        String num2 = num.reverse().toString();
        String res = add(num1, num2);
        result = new StringBuffer(res);
        String resu = res + "";
        System.out.println(num1 + " + " + num2 + " = " + resu);
        return judge2(resu);
    }

    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        String num = bufferedReader.readLine();
        StringBuffer num1 = new StringBuffer(num);
        result = num1;
        for (int i = 0; i < 10; i++)
            if (judge(result)) {
                System.out.println(result + " is a palindromic number.");
                return;
            }
        System.out.println("Not found in 10 iterations.");
    }
}
