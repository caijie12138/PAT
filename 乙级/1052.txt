1052. 卖个萌 (20)

时间限制
400 ms
内存限制
65536 kB
代码长度限制
8000 B
判题程序
Standard
作者
CHEN, Yue
萌萌哒表情符号通常由“手”、“眼”、“口”三个主要部分组成。简单起见，我们假设一个表情符号是按下列格式输出的：

[左手]([左眼][口][右眼])[右手]
现给出可选用的符号集合，请你按用户的要求输出表情。

输入格式：

输入首先在前三行顺序对应给出手、眼、口的可选符号集。每个符号括在一对方括号[]内。题目保证每个集合都至少有一个符号，并不超过10个符号；每个符号包含1到4个非空字符。

之后一行给出一个正整数K，为用户请求的个数。随后K行，每行给出一个用户的符号选择，顺序为左手、左眼、口、右眼、右手——这里只给出符号在相应集合中的序号（从1开始），数字间以空格分隔。

输出格式：

对每个用户请求，在一行中输出生成的表情。若用户选择的序号不存在，则输出“Are you kidding me? @\/@”。

输入样例：
[╮][╭][o][~\][/~]  [<][>]
 [╯][╰][^][-][=][>][<][@][⊙]
[Д][▽][_][ε][^]  ...
4
1 1 2 2 2
6 8 1 5 5
3 3 4 3 3
2 10 3 9 3
输出样例：
╮(╯▽╰)╭
<(@Д=)/~
o(^ε^)o
Are you kidding me? @\/@


"最后一行字母送个PAT题库"
java就是有两个例子过不去，卡了一下午



import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        String line_left = bufferedReader.readLine();
        line_left = line_left.substring(line_left.indexOf(91)+1,line_left.lastIndexOf(93));
        String[] hands = line_left.split("](\\s)*\\[");

        String line_eye = bufferedReader.readLine();
        line_eye = line_eye.substring(line_eye.indexOf(91)+1,line_eye.lastIndexOf(93));
        String[] eyes = line_eye.split("](\\s)*\\[");

        String line_mouth = bufferedReader.readLine();
        line_mouth = line_mouth.substring(line_mouth.indexOf(91)+1,line_mouth.lastIndexOf(93));
        String[] mouths = line_mouth.split("](\\s)*\\[");

        int num = Integer.parseInt(bufferedReader.readLine());
        for (int i = 0; i < num; i++) {
            String signs = bufferedReader.readLine();
            String[] sign = signs.split(" ");
            if (Integer.parseInt(sign[0]) > hands.length || Integer.parseInt(sign[0]) < 1) {
                System.out.println("Are you kidding me? @\\/@");
                continue;
            }
            if (Integer.parseInt(sign[1]) > eyes.length || Integer.parseInt(sign[1]) < 1) {
                System.out.println("Are you kidding me? @\\/@");
                continue;
            }
            if (Integer.parseInt(sign[2]) > mouths.length || Integer.parseInt(sign[2]) < 1) {
                System.out.println("Are you kidding me? @\\/@");
                continue;
            }
            if (Integer.parseInt(sign[3]) > eyes.length || Integer.parseInt(sign[3]) < 1) {
                System.out.println("Are you kidding me? @\\/@");
                continue;
            }
            if (Integer.parseInt(sign[4]) > hands.length || Integer.parseInt(sign[4]) < 1) {
                System.out.println("Are you kidding me? @\\/@");
                continue;
            }
            String left_hand = hands[Integer.parseInt(sign[0]) - 1];
            System.out.print(left_hand+"(");

            String left_eye = eyes[Integer.parseInt(sign[1]) - 1];
            System.out.print(left_eye);

            String mouth = mouths[Integer.parseInt(sign[2]) - 1];
            System.out.print(mouth);

            String right_eye = eyes[Integer.parseInt(sign[3]) - 1];
            System.out.print(right_eye+")");

            String right_hand = hands[Integer.parseInt(sign[4]) - 1];
            System.out.println(right_hand);

        }
    }
}
