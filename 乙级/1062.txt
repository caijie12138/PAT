1062. 最简分数(20)

时间限制
400 ms
内存限制
65536 kB
代码长度限制
8000 B
判题程序
Standard
作者
CHEN, Yue
一个分数一般写成两个整数相除的形式：N/M，其中M不为0。最简分数是指分子和分母没有公约数的分数表示形式。

现给定两个不相等的正分数 N1/M1 和 N2/M2，要求你按从小到大的顺序列出它们之间分母为K的最简分数。

输入格式：

输入在一行中按N/M的格式给出两个正分数，随后是一个正整数分母K，其间以空格分隔。题目保证给出的所有整数都不超过1000。

输出格式：

在一行中按N/M的格式列出两个给定分数之间分母为K的所有最简分数，按从小到大的顺序，其间以1个空格分隔。行首尾不得有多余空格。题目保证至少有1个输出。

输入样例：
7/18 13/20 12
输出样例：
5/12 7/12

//Created By Caijie,Senior Student of BJTU
#include <iostream>
#include <string.h>
using namespace std;

double calcu(string num1) {
    bool flag = false;
    string re1, re2;
    for (int i = 0; i < num1.size(); i++) {
        if (num1[i] == '/') {
            flag = true;
            continue;
        }
        if (flag)
            re2 += num1[i];
        else
            re1 += num1[i];
    }
    char c1[4];
    strcpy(c1, re1.c_str());
    char c2[4];
    strcpy(c2, re2.c_str());
    int a = atoi(c1);
    int b = atoi(c2);
    return (double) a / (double) b;
}
int gcd(int a,int b)
{   int c;
    c=(a>b)?b:a;
    while(a%c!=0||b%c!=0)
    {   c--;
    }
    return c;
}

int main() {
    string num1, num2;
    cin >> num1 >> num2;
    double num;
    cin >> num;
    double re1 = calcu(num1);
    double re2 = calcu(num2);
    if(re2<re1)
    {
        double temp;
        temp = re2;
        re2 = re1;
        re1 = temp;
    }
    bool flag = false;
    for (double i = 1; i / num < re2; i++) {
        if (i / num > re1 && gcd((int)i,(int)num) == 1) {
            if(flag)
                cout << " ";
            cout << i << "/" << num;
            flag = true;
        }
    }
    return 0;
}

