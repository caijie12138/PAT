//Create by Caijie.Senior student of BJTU
1029. 旧键盘(20)

时间限制
200 ms
内存限制
65536 kB
代码长度限制
8000 B
判题程序
Standard
作者
CHEN, Yue
旧键盘上坏了几个键，于是在敲一段文字的时候，对应的字符就不会出现。现在给出应该输入的一段文字、以及实际被输入的文字，请你列出肯定坏掉的那些键。

输入格式：

输入在2行中分别给出应该输入的文字、以及实际被输入的文字。每段文字是不超过80个字符的串，由字母A-Z（包括大、小写）、数字0-9、以及下划线“_”（代表空格）组成。题目保证2个字符串均非空。

输出格式：

按照发现顺序，在一行中输出坏掉的键。其中英文字母只输出大写，每个坏键只输出一次。题目保证至少有1个坏键。

输入样例：
7_This_is_a_test
_hs_s_a_es
输出样例：
7TI

import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
    static boolean record[] = new boolean[37];

    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        String line1 = bufferedReader.readLine();
        String line2 = bufferedReader.readLine();
        for (int i = 0, j = 0; i < line1.length(); i++) {
            if (line1.charAt(i) == line2.charAt(j)) {
                if(j==line2.length()-1)//坏键在最后一个的特例
                    continue;
                j++;
            } else {
                int index;
                if (line1.charAt(i) >= 97 && line1.charAt(i) <= 122) {
                    index = line1.charAt(i) - 87;
                    if (record[index] == false) {
                        System.out.print((char) (line1.charAt(i) - 32));
                        record[index] = true;
                    }
                } else if (line1.charAt(i) >= 65 && line1.charAt(i) <= 90) {
                    index = line1.charAt(i) - 55;
                    if (record[index] == false) {
                        System.out.print(line1.charAt(i));
                        record[index] = true;
                    }
                } else if (line1.charAt(i) >= 48 && line1.charAt(i) <= 57) {
                    index = line1.charAt(i) - 48;
                    if (record[index] == false) {
                        System.out.print(line1.charAt(i));
                        record[index] = true;
                    }
                } else {
                    if (record[36] == false) {
                        System.out.print(line1.charAt(i));
                        record[36] = true;
                    }
                }
            }
        }
    }
}
